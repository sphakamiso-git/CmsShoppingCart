@model IEnumerable<Category>

@{
    ViewData["Title"] = "Categories";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table sorting" id="categories">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>


            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="id_@item.Id">

                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>


                <td>
                    <a asp-action="Edit" asp-controller="Categories" asp-route-id="@item.Id">Edit</a>|
                    <a asp-action="Details" asp-controller="Categories" asp-route-id="@item.Id">Details</a>|
                    <a class="confirmDeletion" asp-action="Delete" asp-controller="Categories" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>

    <script>
        $("table#categories tbody").sortable({
            items: "tr:not(.home)",
            placeholder: "ui-state-highlight",
            update: function () {
                let ids = $("table#categories tbody").sortable("serialize");
                let url = "/admin/categories/reorder";

                $.post(url, ids, function () { });
            }
        })
    </script>
}
